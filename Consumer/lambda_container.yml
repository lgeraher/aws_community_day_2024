version: 0.2

env:
  variables:
    IMAGE_TAG: "$CODEBUILD_RESOLVED_SOURCE_VERSION"
    AWS_REGION: "us-east-1"
    AWS_ACCOUNT_ID: "435053451664"
    ECR_REPOSITORY_NAME: "aws_community_day"
    LAMBDA_FUNCTION_NAME: "aws_lambda_container"

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - export REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME
      - echo "Repository URI is $REPOSITORY_URI"
      - echo "Build starting..."
      - echo "Build number $CODEBUILD_BUILD_NUMBER"
      - echo "Resolved source version $CODEBUILD_RESOLVED_SOURCE_VERSION"

  build:
    commands:
      - echo "Building the Docker image..."
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG ./Consumer

  post_build:
    commands:
      - echo "Pushing the Docker image to ECR..."
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY_NAME
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Image pushed to ECR $REPOSITORY_URI:$IMAGE_TAG"
      - echo "Updating Lambda function to use the new image..."
      - aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --image-uri $REPOSITORY_URI:$IMAGE_TAG --region $AWS_REGION
      - echo "Lambda function updated to new image."
